{"ast":null,"code":"import _toConsumableArray from \"D:/Grupo-easy/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ADD_TO_CART, UPDATE_PRODUCT_QUANTITY, REMOVE_PRODUCT_FROM_CART } from \"../actions/cart\";\n\nfunction cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        var _action$payload = action.payload,\n            productToAdd = _action$payload.product,\n            _action$payload$quant = _action$payload.quantity,\n            quantity = _action$payload$quant === void 0 ? 1 : _action$payload$quant;\n\n        var productsInCart = _toConsumableArray(state);\n\n        var isProductInCart = false;\n\n        for (var i = 0; i < productsInCart.length; i++) {\n          var product = productsInCart[i];\n\n          if (product.id === productToAdd.id) {\n            product.quantity = product.quantity + parseInt(quantity);\n            isProductInCart = true;\n            break;\n          }\n        }\n\n        if (!isProductInCart) {\n          productToAdd.quantity = parseInt(quantity);\n          productsInCart.push(productToAdd);\n        }\n\n        return productsInCart;\n      }\n\n    case UPDATE_PRODUCT_QUANTITY:\n      {\n        var _action$payload2 = action.payload,\n            productId = _action$payload2.productId,\n            _action$payload2$quan = _action$payload2.quantity,\n            quantityToSet = _action$payload2$quan === void 0 ? 1 : _action$payload2$quan;\n\n        var _productsInCart = _toConsumableArray(state);\n\n        for (var _i = 0; _i < _productsInCart.length; _i++) {\n          var _product = _productsInCart[_i];\n\n          if (_product.id === productId) {\n            _product.quantity = parseInt(quantityToSet);\n            break;\n          }\n        }\n\n        return _productsInCart;\n      }\n\n    case REMOVE_PRODUCT_FROM_CART:\n      {\n        return state.filter(function (product) {\n          return product.id !== action.payload;\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default cartReducer;","map":{"version":3,"sources":["D:/Grupo-easy/reducers/cart.js"],"names":["ADD_TO_CART","UPDATE_PRODUCT_QUANTITY","REMOVE_PRODUCT_FROM_CART","cartReducer","state","action","type","payload","productToAdd","product","quantity","productsInCart","isProductInCart","i","length","id","parseInt","push","productId","quantityToSet","filter"],"mappings":";AAAA,SACEA,WADF,EAEEC,uBAFF,EAGEC,wBAHF,QAIO,iBAJP;;AAMA,SAASC,WAAT,GAAyC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AAAkB;AAAA,8BACgCK,MAAM,CAACE,OADvC;AAAA,YACCC,YADD,mBACRC,OADQ;AAAA,oDACeC,QADf;AAAA,YACeA,QADf,sCAC0B,CAD1B;;AAEhB,YAAMC,cAAc,sBAAOP,KAAP,CAApB;;AAEA,YAAIQ,eAAe,GAAG,KAAtB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,cAAc,CAACG,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,cAAMJ,OAAO,GAAGE,cAAc,CAACE,CAAD,CAA9B;;AAEA,cAAIJ,OAAO,CAACM,EAAR,KAAeP,YAAY,CAACO,EAAhC,EAAoC;AAClCN,YAAAA,OAAO,CAACC,QAAR,GAAmBD,OAAO,CAACC,QAAR,GAAmBM,QAAQ,CAACN,QAAD,CAA9C;AACAE,YAAAA,eAAe,GAAG,IAAlB;AACA;AACD;AACF;;AAED,YAAI,CAACA,eAAL,EAAsB;AACpBJ,UAAAA,YAAY,CAACE,QAAb,GAAwBM,QAAQ,CAACN,QAAD,CAAhC;AACAC,UAAAA,cAAc,CAACM,IAAf,CAAoBT,YAApB;AACD;;AACD,eAAOG,cAAP;AACD;;AACD,SAAKV,uBAAL;AAA8B;AAAA,+BACuBI,MAAM,CAACE,OAD9B;AAAA,YACpBW,SADoB,oBACpBA,SADoB;AAAA,qDACTR,QADS;AAAA,YACCS,aADD,sCACiB,CADjB;;AAE5B,YAAMR,eAAc,sBAAOP,KAAP,CAApB;;AAEA,aAAK,IAAIS,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGF,eAAc,CAACG,MAAnC,EAA2CD,EAAC,EAA5C,EAAgD;AAC9C,cAAMJ,QAAO,GAAGE,eAAc,CAACE,EAAD,CAA9B;;AAEA,cAAIJ,QAAO,CAACM,EAAR,KAAeG,SAAnB,EAA8B;AAC5BT,YAAAA,QAAO,CAACC,QAAR,GAAmBM,QAAQ,CAACG,aAAD,CAA3B;AACA;AACD;AACF;;AAED,eAAOR,eAAP;AACD;;AACD,SAAKT,wBAAL;AAA+B;AAC7B,eAAOE,KAAK,CAACgB,MAAN,CAAa,UAACX,OAAD;AAAA,iBAAaA,OAAO,CAACM,EAAR,KAAeV,MAAM,CAACE,OAAnC;AAAA,SAAb,CAAP;AACD;;AACD;AACE,aAAOH,KAAP;AAzCJ;AA2CD;;AAED,eAAeD,WAAf","sourcesContent":["import {\n  ADD_TO_CART,\n  UPDATE_PRODUCT_QUANTITY,\n  REMOVE_PRODUCT_FROM_CART,\n} from \"../actions/cart\";\n\nfunction cartReducer(state = [], action) {\n  switch (action.type) {\n    case ADD_TO_CART: {\n      const { product: productToAdd, quantity = 1 } = action.payload;\n      const productsInCart = [...state];\n\n      let isProductInCart = false;\n      for (let i = 0; i < productsInCart.length; i++) {\n        const product = productsInCart[i];\n\n        if (product.id === productToAdd.id) {\n          product.quantity = product.quantity + parseInt(quantity);\n          isProductInCart = true;\n          break;\n        }\n      }\n\n      if (!isProductInCart) {\n        productToAdd.quantity = parseInt(quantity);\n        productsInCart.push(productToAdd);\n      }\n      return productsInCart;\n    }\n    case UPDATE_PRODUCT_QUANTITY: {\n      const { productId, quantity: quantityToSet = 1 } = action.payload;\n      const productsInCart = [...state];\n\n      for (let i = 0; i < productsInCart.length; i++) {\n        const product = productsInCart[i];\n\n        if (product.id === productId) {\n          product.quantity = parseInt(quantityToSet);\n          break;\n        }\n      }\n\n      return productsInCart;\n    }\n    case REMOVE_PRODUCT_FROM_CART: {\n      return state.filter((product) => product.id !== action.payload);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}